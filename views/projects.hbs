<!DOCTYPE html>
<html lang="en-US">
	<head>
		<title>James Skipp | Projects</title>
    {{> dependencies}}
		<link rel="stylesheet" href="css/projects.css">
		<link rel="stylesheet" href="css/list-group.css">
  </head>
  <body>
		{{> navbar}}
    <div class="container-fluid">
      <div class="row">
        <div class="col-sm-1">
        </div>
        <div class="col-sm-10">
					<h2><a href="https://jskipp-todo-rest-api.herokuapp.com/">Todo REST API</a> </h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a href="https://github.com/jamesskipp/node-todo-api">Todo REST API
                on GitHub</a></h3>
              <div class="containter-fluid">
                <div class="text-projects">
                  <h4>Description:</h4>
                  <p>This project is a REST API for maintaining a database of
									todos. The API has user post, get, and delete paths, as well as
									post, get, delete, and patch paths for todos. </p>
                  <h4>Technical Details:</h4>
                  <p>This is a Node.js <a href="https://www.npmjs.com/package/express">
									Express</a> app using <a href="https://www.mongodb.com/">MongoDB
									</a>. I used <a href="https://www.npmjs.com/package/mongoose">Mongoose</a>
								 	to interact with the database. Authentication was handled by
									<a href="https://www.npmjs.com/package/bcryptjs">bcryptjs</a>,
								 	and <a href="https://www.npmjs.com/package/jsonwebtoken">jsonwebtoken</a>.
								  Testing was done with <a href="https://www.npmjs.com/package/mocha">
									Mocha</a>, <a href="https://www.npmjs.com/package/supertest">supertest</a>,
									and <a href="https://www.npmjs.com/package/expect">expect</a>.
									Additional development tools included <a href="https://www.getpostman.com/">Postman</a>
									for managing API requests, <a href="https://robomongo.org/">Robo
									3T (formerly Robomongo)</a> for database queries, and
									<a href="https://eslint.org/">ESLint</a> for code linting.
									The app is hosted on <a href="https://www.heroku.com/">Heroku</a>.</p>
                  <h4>My Contribution:</h4>
                  <p>I am the sole contributer.</p>
                </div>
              </div>
            </div>
          </div>
          <h2>MetaNews</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a href="https://github.com/MetaNews/WebsiteProject">MetaNews on
                GitHub</a></h3>
              <div class="containter-fluid">
                <div class="text-projects">
                  <h4>Description:</h4>
                  <p>MetaNews is a web app designed to fetch and deliver news articles
                  from major sources around the web. Users can vote on the quality of
                  the article (authenticity, writing), as well as the perceieved bias
                  (left, right). The app tracts the data recieved from users not only
                  to display a per-article summary of the quality and bias, but to record
                  the historical average of news sources and journalists. The goal
                  is to create a news app where users can decide on the integrity of
                  news based on what they read, while also considering the historical
                  record of the publisher and journalist.</p>
                  <h4>Technical Details:</h4>
                  <p>The site's front-end is built with HTML5, CSS3, JavaScript,
                  <a href="https://jquery.com/">jQuery</a>, and <a href="http://getbootstrap.com/2.3.2/">
                  Bootstrap</a>. The graphs are provided by <a href="https://www.amcharts.com/">
                  amCharts</a>. Site authentication is done using <a href="https://aws.amazon.com/cognito/">
                  AWS Cognito</a>. The articles are generated via a webcrawling Python
                  script hooked up to <a href="https://aws.amazon.com/dynamodb/">Amazon
                  DynamoDB</a>. The back-end uses <a>
                  Amazon Lambda</a> for serverless computations.</p>
                  <h4>My Contribution:</h4>
                  <p>I designed and built the front-end. My partner <a
                  href="https://github.com/aussieadam">aussieadam</a> designed and
                  built the back-end.</p>
                </div>
              </div>
            </div>
          </div>
          <h2>James Skipp's Personal Site</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a href="https://github.com/jamesskipp/jamesskipp-site">James
                Skipp's Personal Site on GitHub</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>My peronsal site that I use to describe my techincal skills, and
                my thoughts and opinions on software development topics.</p>
                <h4>Technical Details:</h4>
                <p>The front-end is based on HTML5, CSS3, and <a href="http://getbootstrap.com/2.3.2/">
                Bootstrap</a>. The back-end is built on Node.Js using <a href="https://www.npmjs.com/package/express">
                Express</a>, and <a href="https://www.npmjs.com/package/handlebars">
								handlebars</a>/<a href="https://www.npmjs.com/package/hbs">hbs</a>,
                and is hosted on <a href="https://www.heroku.com/">Heroku</a>.</p>
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
          <h2>Notes App</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a href="https://github.com/jamesskipp/notes-app">
                Notes App on GitHub</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>A simple note-taking app that I developed as part of a
                <a href="https://www.udemy.com/the-complete-nodejs-developer-course-2/">
                Udemy course on Node.Js development</a>. The app runs from the command
                line and creates encrypted or unencrypted notes in JSON format.</p>
                <h4>Technical Details:</h4>
                <p>The app is built with Node.Js and uses <a href="https://www.npmjs.com/package/yargs">
                Yargs</a> to handle command line arguments, <a href="https://www.npmjs.com/package/crypto">
                Crypto</a> for encryption, and <a href="https://www.npmjs.com/package/lodash">
                Lodash</a> for miscellaneous tasks.</p>
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
          <h2>Weather App</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a href="https://github.com/jamesskipp/weather-app">
                Weather App on GitHub</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>A simple weather app that I developed as part of a
                <a href="https://www.udemy.com/the-complete-nodejs-developer-course-2/">
                Udemy course on Node.Js development</a>. The app runs from the command
                line, takes an address, and returns some information about the weather
                at that address.</p>
                <h4>Technical Details:</h4>
                <p>The app is built with Node.Js and uses <a href="https://www.npmjs.com/package/yargs">
                Yargs</a> to handle command line arguments, and <a href="https://www.npmjs.com/package/axios">
                Axios</a> to handle HTTP requests. Latitude and longitude information
                is supplied via the <a href="https://developers.google.com/maps/documentation/geocoding/start">
                Google Geocoding</a> API, and weather information is supplied via the
                <a href="https://darksky.net/dev">Dark Sky</a> API.
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
					<h2>Zombies!</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a>
                Download</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>Based on the paper "When Zombies Attack!" by Munz, Hudea, Imad, and Smith
								, this is a program that runs a simulation of a zombie apocalypse. You can
								play around with several variables and see how they might affect the
								zombie apocalypse.</p>
                <h4>Technical Details:</h4>
                <p>The program is written in Standard ML and runs on the
								<a href="http://www.smlnj.org/">SML-NJ</a> compiler.</p>
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
					<h2>Warfare Sim</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a>
                Download</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>Based on the paper "Warfare Calculus" by Joshua M. Epstein, this
								is a wartime simulation similar to programs used by the US military
								to calculate casualties and victory probability in modern warfare.
								You can adjust power, size, and type of military forces on both sides
								to see how they might affect the outcome of war.</p>
                <h4>Technical Details:</h4>
                <p>The program is written in Prolog and runs on the
								<a href="http://www.swi-prolog.org/">SWI-Prolog</a> environment.</p>
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
					<h2>Zendikar Beach</h2>
          <div class="list-group-item">
            <div class="container-fluid">
              <h3><a>
                Download</a></h3>
              <div class="text-projects">
                <h4>Description:</h4>
                <p>This is my attempt to emulate the artwork of Zendikar, a fictional
								world described in Magic: The Gathering.</p>
                <h4>Technical Details:</h4>
                <p>The render was created using <a href="http://www.povray.org/">POV-Ray</a>.</p>
                <h4>My Contribution:</h4>
                <p>I am the sole contributer.</p>
              </div>
            </div>
          </div>
					<div class="list-group-item">
						<div class="container-fluid">
							<img src="img/Zendikar_Beach_1080_AA.png" class="img-wide" alt="Zendikar Beach in POV-Ray">
						</div>
					</div>
        </div>
        <div class="col-sm-1">
        </div>
      </div>
      <div class="row">
        <div class="col-sm-1">
        </div>
        <div class="col-sm-10">
          <div class="buffer">
          </div>
        </div>
        <div class="col-sm-1">
        </div>
      </div>
    </div>
		{{> footer}}
  </body>
</html>
